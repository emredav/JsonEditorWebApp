{"version":3,"sources":["components/json-visualization/JsonTree.tsx","components/editors/SimpleJsonEditor.tsx","components/ui/ToggleSwitch.tsx","utils/fileUtils.ts","components/ui/JsonSection.tsx","components/ui/PathSelector.tsx","utils/jsonUtils.ts","hooks/useJsonOperations.ts","components/Home.tsx","components/SchemaValidator.tsx","components/ui/Navigation.tsx","components/App.tsx","index.tsx"],"names":["JsonTree","_ref","data","name","expanded","setExpanded","useState","undefined","_jsx","className","children","_jsxs","value","String","isArray","Array","keys","map","_","i","Object","isEmpty","length","summary","bracketType","onClick","key","SimpleJsonEditor","onChange","height","textareaRef","useRef","lineNumbersRef","useEffect","handleScroll","current","scrollTop","textarea","addEventListener","removeEventListener","lineNumbers","split","index","style","ref","e","target","ToggleSwitch","label","checked","type","fallbackCopyToClipboard","text","callback","textArea","document","createElement","position","left","top","opacity","pointerEvents","zIndex","body","appendChild","focus","select","successful","execCommand","removeChild","err","console","error","JsonSection","title","actionButton","jsonString","JSON","stringify","handleCopy","showNotification","success","notification","textContent","cssText","setTimeout","navigator","clipboard","writeText","then","catch","copyToClipboard","PathSelector","paths","selectedPaths","onTogglePath","onSelectAll","onClearSelection","onRemove","isProcessing","display","gap","filter","path","includes","id","htmlFor","marginTop","justifyContent","disabled","generateSchema","items","properties","gatherPaths","currentPath","arguments","Set","add","arrayPath","newPath","gatherCounts","counts","Map","set","item","indexPath","has","removePath","arrayElementMatch","replace","match","parseInt","parentObj","parentPath","lastKey","arrayClone","splice","parentObjClone","result","removePathHelper","tokens","token","isArrayEmptying","endsWith","slice","isNumericIndex","isNaN","copy","nextToken","innerArray","validateType","schema","actualType","types","typeMapping","isValidType","schemaType","validJsTypes","Number","isInteger","valid","errors","push","message","join","prop","propPath","itemPath","useJsonOperations","jsonInput","setJsonInput","parsedJson","setParsedJson","generatedSchema","setGeneratedSchema","allPaths","setAllPaths","selectedRemovalPaths","setSelectedRemovalPaths","itemCounts","setItemCounts","modifiedJson","setModifiedJson","setIsProcessing","parseJson","trim","parse","pathSet","cleanedPaths","from","sort","countsMap","alert","Error","processJsonFromFile","content","togglePath","prev","p","selectAllPaths","clearSelectedPaths","handleRemove","newJson","pathsToRemove","removeSelectedPaths","loadSampleJson","sample","clearJsonInput","window","confirm","Home","showSchema","setShowSchema","showItemCounts","setShowItemCounts","showParsedTree","setShowParsedTree","fileInputRef","href","rel","xmlns","width","viewBox","d","_fileInputRef$current","click","event","_event$target$files","file","files","reader","FileReader","onload","readAsText","accept","entries","count","downloadModifiedJson","filename","json","blob","Blob","URL","createObjectURL","link","download","revokeObjectURL","downloadJson","SchemaValidator","setSchema","validationResult","setValidationResult","validateJson","schemaObj","required","requiredProp","additionalProperties","enum","validateJsonAgainstSchema","Navigation","NavLink","to","isActive","_ref2","App","HashRouter","Routes","Route","element","Navigate","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53233b3c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction JsonTree({ data, name }: { data: any; name?: string }) {\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  const getValueClassName = (value: any) => {\r\n    if (value === null || value === undefined) return \"json-tree-value-null\";\r\n    if (typeof value === \"string\") return \"json-tree-value-string\";\r\n    if (typeof value === \"number\") return \"json-tree-value-number\";\r\n    if (typeof value === \"boolean\") return \"json-tree-value-boolean\";\r\n    return \"json-tree-value\";\r\n  };\r\n\r\n  if (data === null || data === undefined) {\r\n    return (\r\n      <div className=\"json-tree-item\">\r\n        <div className=\"json-tree-item-content\">\r\n          {name && <span className=\"json-tree-key\">{name}:</span>}\r\n          <span className=\"json-tree-value-null\">null</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (typeof data !== \"object\") {\r\n    return (\r\n      <div className=\"json-tree-item\">\r\n        <div className=\"json-tree-item-content\">\r\n          {name && <span className=\"json-tree-key\">{name}:</span>}\r\n          <span className={getValueClassName(data)}>\r\n            {typeof data === \"string\" ? `\"${data}\"` : String(data)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const isArray = Array.isArray(data);\r\n  const keys = isArray ? data.map((_: any, i: number) => i) : Object.keys(data);\r\n  const isEmpty = keys.length === 0;\r\n  const summary = isArray ? \"Array\" : \"Object\";\r\n  const bracketType = isArray ? \"[]\" : \"{}\";\r\n\r\n  return (\r\n    <div className=\"json-tree-item\">\r\n      <div className=\"json-tree-item-content\" onClick={() => !isEmpty && setExpanded(!expanded)}>\r\n        <div className=\"json-tree-expand-icon\">\r\n          {!isEmpty && (expanded ? \"−\" : \"+\")}\r\n        </div>\r\n        \r\n        {name && <span className=\"json-tree-key\">{name}:</span>}\r\n        \r\n        <span className=\"json-tree-value\">\r\n          {bracketType[0]}\r\n          {isEmpty ? bracketType[1] : expanded ? \"\" : ` ${summary}(${keys.length}) `}\r\n          {!expanded && bracketType[1]}\r\n        </span>\r\n      </div>\r\n      \r\n      {!isEmpty && expanded && (\r\n        <div className=\"json-tree-children fade-in\">\r\n          {keys.map((key: any) => (\r\n            <JsonTree\r\n              key={key}\r\n              data={data[key]}\r\n              name={isArray ? `${key}` : key}\r\n            />\r\n          ))}\r\n          <div className=\"json-tree-item-content\">\r\n            <span className=\"json-tree-value\">{bracketType[1]}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JsonTree;","import React, { useRef, useEffect } from 'react';\r\n\r\ninterface SimpleJsonEditorProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  height?: string;\r\n}\r\n\r\nconst SimpleJsonEditor: React.FC<SimpleJsonEditorProps> = ({ value, onChange, height = '300px' }) => {\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const lineNumbersRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (lineNumbersRef.current && textareaRef.current) {\r\n        lineNumbersRef.current.scrollTop = textareaRef.current.scrollTop;\r\n      }\r\n    };\r\n\r\n    const textarea = textareaRef.current;\r\n    if (textarea) {\r\n      textarea.addEventListener('scroll', handleScroll);\r\n    }\r\n\r\n    return () => {\r\n      if (textarea) {\r\n        textarea.removeEventListener('scroll', handleScroll);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  const lineNumbers = value.split('\\n').map((_, index) => (\r\n    <div key={index} className=\"line-number\">\r\n      {index + 1}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"editor-wrapper\" style={{ height }}>\r\n      <div className=\"simple-json-editor-container\">\r\n        <div className=\"editor-line-numbers\" ref={lineNumbersRef}>\r\n          {lineNumbers}\r\n        </div>\r\n        <textarea\r\n          ref={textareaRef}\r\n          className=\"editor-textarea\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleJsonEditor;","import React from 'react';\r\n\r\ninterface ToggleSwitchProps {\r\n  label: string;\r\n  checked: boolean;\r\n  onChange: () => void;\r\n}\r\n\r\nconst ToggleSwitch: React.FC<ToggleSwitchProps> = ({ label, checked, onChange }) => {\r\n  return (\r\n    <div className=\"toggle-item\">\r\n      <label className=\"toggle\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={checked}\r\n          onChange={onChange}\r\n        />\r\n        <span className=\"toggle-slider\"></span>\r\n      </label>\r\n      <span>{label}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleSwitch;\r\n","// Dosyayı JSON olarak indirme fonksiyonu\r\nexport function downloadJson(data: any, filename: string) {\r\n  const json = JSON.stringify(data, null, 2);\r\n  const blob = new Blob([json], { type: \"application/json\" });\r\n  const href = URL.createObjectURL(blob);\r\n  \r\n  const link = document.createElement('a');\r\n  link.href = href;\r\n  link.download = filename || 'data.json';\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  \r\n  document.body.removeChild(link);\r\n  URL.revokeObjectURL(href);\r\n}\r\n\r\n// Kopyalama işlemi için geliştirilmiş mobil uyumlu fonksiyon\r\nexport function copyToClipboard(text: string) {\r\n  // Bildirim gösterme fonksiyonu - kopyalama sonrası kullanıcıya bilgi verir\r\n  const showNotification = (success: boolean) => {\r\n    const notification = document.createElement('div');\r\n    notification.textContent = success ? '✓ Copied' : '✗ Copy failed';\r\n    notification.style.cssText = `\r\n      position: fixed;\r\n      bottom: 20px;\r\n      right: 20px;\r\n      background: ${success ? '#10b981' : '#ef4444'};\r\n      color: white;\r\n      padding: 10px 16px;\r\n      border-radius: 4px;\r\n      box-shadow: 0 2px 5px rgba(0,0,0,0.2);\r\n      z-index: 1000;\r\n      opacity: 1;\r\n      transition: opacity 0.3s ease;\r\n    `;\r\n    document.body.appendChild(notification);\r\n    \r\n    // Notification'ı temiz şekilde kaldır\r\n    setTimeout(() => {\r\n      notification.style.opacity = '0';\r\n      setTimeout(() => {\r\n        document.body.removeChild(notification);\r\n      }, 300);\r\n    }, 1700);\r\n  };\r\n\r\n  // Modern Clipboard API ile deneme\r\n  if (navigator.clipboard && navigator.clipboard.writeText) {\r\n    navigator.clipboard.writeText(text)\r\n      .then(() => {\r\n        showNotification(true);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Clipboard API error:\", err);\r\n        // Modern API başarısız olursa yedek yöntemi dene\r\n        fallbackCopyToClipboard(text, showNotification);\r\n      });\r\n  } else {\r\n    // Clipboard API desteklenmiyorsa yedek yöntemi kullan\r\n    fallbackCopyToClipboard(text, showNotification);\r\n  }\r\n}\r\n\r\n// Eski tarayıcılar ve mobil için yedek kopyalama metodu\r\nfunction fallbackCopyToClipboard(text: string, callback: (success: boolean) => void) {\r\n  try {\r\n    // Geçici textarea elementi oluştur\r\n    const textArea = document.createElement('textarea');\r\n    textArea.value = text;\r\n    \r\n    // Mobil ve masaüstünde çalışması için stil ayarları\r\n    textArea.style.position = 'fixed';\r\n    textArea.style.left = '0';\r\n    textArea.style.top = '0';\r\n    textArea.style.opacity = '0';\r\n    textArea.style.pointerEvents = 'none';\r\n    textArea.style.zIndex = '-1';\r\n    \r\n    document.body.appendChild(textArea);\r\n    \r\n    // Metin alanını seç ve kopyala\r\n    textArea.focus();\r\n    textArea.select();\r\n    \r\n    // Kopyalama komutu çalıştır\r\n    const successful = document.execCommand('copy');\r\n    \r\n    // Geçici elementi temizle\r\n    document.body.removeChild(textArea);\r\n    \r\n    // Sonucu bildir\r\n    callback(successful);\r\n  } catch (err) {\r\n    console.error(\"Copying text failed:\", err);\r\n    callback(false);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { copyToClipboard } from '../../utils/fileUtils';\r\n\r\ninterface JsonSectionProps {\r\n  title: string;\r\n  data: any;\r\n  actionButton?: React.ReactNode;\r\n}\r\n\r\nconst JsonSection: React.FC<JsonSectionProps> = ({ title, data, actionButton }) => {\r\n  const jsonString = JSON.stringify(data, null, 2);\r\n  \r\n  const handleCopy = () => {\r\n    copyToClipboard(jsonString);\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"section-header\">\r\n        <h2 className=\"text-xl font-semibold\">{title}</h2>\r\n        {actionButton}\r\n      </div>\r\n      <div className=\"section-content\">\r\n        <div className=\"relative\">\r\n          <pre>{jsonString}</pre>\r\n          <button\r\n            className=\"btn-copy\"\r\n            onClick={handleCopy}\r\n          >\r\n            Copy\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JsonSection;\r\n","import React from 'react';\r\n\r\ninterface PathSelectorProps {\r\n  paths: string[];\r\n  selectedPaths: string[];\r\n  onTogglePath: (path: string) => void;\r\n  onSelectAll: () => void;\r\n  onClearSelection: () => void;\r\n  onRemove: () => void;\r\n  isProcessing: boolean;\r\n}\r\n\r\nconst PathSelector: React.FC<PathSelectorProps> = ({ \r\n  paths, \r\n  selectedPaths, \r\n  onTogglePath, \r\n  onSelectAll, \r\n  onClearSelection, \r\n  onRemove, \r\n  isProcessing \r\n}) => {\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"section-header\">\r\n        <h2 className=\"text-xl font-semibold\">Select Fields to Remove</h2>\r\n        <div style={{ display: 'flex', gap: '0.5rem' }}>\r\n          <button className=\"btn-secondary\" onClick={onSelectAll}>Select All</button>\r\n          <button className=\"btn-secondary\" onClick={onClearSelection}>Clear</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"section-content\">\r\n        <div className=\"checkbox-container\">\r\n          {paths\r\n            .filter(path => !path.includes(\"[]..\"))\r\n            .map((path) => (\r\n              <div key={path} className=\"custom-checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={`path-${path}`}\r\n                  checked={selectedPaths.includes(path)}\r\n                  onChange={() => onTogglePath(path)}\r\n                />\r\n                <label htmlFor={`path-${path}`}>{path}</label>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        \r\n        {paths.length > 0 && (\r\n          <div style={{ marginTop: '1rem', display: 'flex', justifyContent: 'flex-end' }}>\r\n            <button\r\n              className=\"btn-primary\"\r\n              onClick={onRemove}\r\n              disabled={isProcessing}\r\n            >\r\n              {isProcessing ? 'Processing...' : `View (Remove ${selectedPaths.length} Field(s))`}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PathSelector;\r\n","// Generate a basic JSON schema from any JSON input\r\nexport function generateSchema(value: any): any {\r\n  if (Array.isArray(value)) {\r\n    return {\r\n      type: \"array\",\r\n      items: value.length > 0 ? generateSchema(value[0]) : {}\r\n    };\r\n  } else if (value && typeof value === \"object\") {\r\n    const properties: Record<string, any> = {};\r\n    for (const key in value) {\r\n      properties[key] = generateSchema(value[key]);\r\n    }\r\n    return {\r\n      type: \"object\",\r\n      properties\r\n    };\r\n  } else if (typeof value === \"string\") {\r\n    return { type: \"string\" };\r\n  } else if (typeof value === \"number\") {\r\n    return { type: \"number\" };\r\n  } else if (typeof value === \"boolean\") {\r\n    return { type: \"boolean\" };\r\n  } else {\r\n    return { type: \"null\" };\r\n  }\r\n}\r\n\r\n// Recursively collect unique paths from JSON\r\nexport function gatherPaths(data: any, currentPath = \"\", paths = new Set<string>()): Set<string> {\r\n  if (Array.isArray(data)) {\r\n    if (currentPath) {\r\n      paths.add(currentPath);\r\n    }\r\n    \r\n    if (data.length > 0) {\r\n      // Array path'ini ekle\r\n      const arrayPath = currentPath ? `${currentPath}[]` : \"[]\";\r\n      paths.add(arrayPath);\r\n      \r\n      if (typeof data[0] === \"object\" && data[0] !== null) {\r\n        for (const key in data[0]) {\r\n          const newPath = `${arrayPath}.${key}`;\r\n          paths.add(newPath);\r\n          \r\n          if (Array.isArray(data[0][key])) {\r\n            paths.add(`${newPath}[]`);\r\n          }\r\n          \r\n          gatherPaths(data[0][key], newPath, paths);\r\n        }\r\n      }\r\n    }\r\n  } else if (data !== null && typeof data === \"object\") {\r\n    if (currentPath) {\r\n      paths.add(currentPath);\r\n    }\r\n    for (const key in data) {\r\n      const newPath = currentPath ? `${currentPath}.${key}` : key;\r\n      paths.add(newPath);\r\n      \r\n      if (Array.isArray(data[key])) {\r\n        paths.add(`${newPath}[]`);\r\n      }\r\n      \r\n      gatherPaths(data[key], newPath, paths);\r\n    }\r\n  } else {\r\n    if (currentPath) {\r\n      paths.add(currentPath);\r\n    }\r\n  }\r\n  return paths;\r\n}\r\n\r\n// Recursively count array/object paths and items\r\nexport function gatherCounts(value: any, currentPath = \"\", counts = new Map<string, number>()): Map<string, number> {\r\n  if (Array.isArray(value)) {\r\n    if (currentPath) {\r\n      counts.set(currentPath, 1);\r\n      \r\n      const arrayPath = `${currentPath}[]`;\r\n      counts.set(arrayPath, value.length);\r\n    }\r\n    \r\n    for (let i = 0; i < value.length; i++) {\r\n      const item = value[i];\r\n      const indexPath = currentPath ? `${currentPath}[].${i}` : `[].${i}`;\r\n      \r\n      if (!counts.has(indexPath)) {\r\n        counts.set(indexPath, 1);\r\n      }\r\n      \r\n      if (item !== null && typeof item === \"object\") {\r\n        gatherCounts(item, indexPath, counts);\r\n      }\r\n    }\r\n  } \r\n  else if (value !== null && typeof value === \"object\") {\r\n    if (currentPath) {\r\n      counts.set(currentPath, 1);\r\n    }\r\n    for (const key in value) {\r\n      const newPath = currentPath ? `${currentPath}.${key}` : key;\r\n      \r\n      if (Array.isArray(value[key])) {\r\n        if (!counts.has(newPath)) {\r\n          counts.set(newPath, 1);\r\n        }\r\n        \r\n        const arrayPath = `${newPath}[]`;\r\n        counts.set(arrayPath, value[key].length);\r\n      } \r\n      else if (value[key] !== null && typeof value[key] === \"object\") {\r\n        if (!counts.has(newPath)) {\r\n          counts.set(newPath, 1);\r\n        }\r\n      }\r\n      else {\r\n        if (!counts.has(newPath)) {\r\n          counts.set(newPath, 1);\r\n        }\r\n      }\r\n      \r\n      if (value[key] !== null && typeof value[key] === \"object\") {\r\n        gatherCounts(value[key], newPath, counts);\r\n      }\r\n    }\r\n  } \r\n  else {\r\n    if (currentPath && !counts.has(currentPath)) {\r\n      counts.set(currentPath, 1);\r\n    }\r\n  }\r\n  return counts;\r\n}\r\n\r\n// Remove selected paths from JSON\r\nexport function removeSelectedPaths(data: any, pathsToRemove: string[]): any {\r\n  let result = data;\r\n  for (const path of pathsToRemove) {\r\n    result = removePath(result, path);\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction removePath(data: any, path: string): any {\r\n  // Path'deki çift noktaları temizle\r\n  path = path.replace(/\\.{2,}/g, '.');\r\n  \r\n  // Dizi elemanı özel durumunu kontrol et (örn: matris[].0)\r\n  const arrayElementMatch = path.match(/^(.+)\\[\\]\\.(\\d+)$/);\r\n  if (arrayElementMatch) {\r\n    const arrayPath = arrayElementMatch[1];\r\n    const index = parseInt(arrayElementMatch[2]);\r\n    \r\n    let parentObj = data;\r\n    const parentPath = arrayPath.split('.');\r\n    \r\n    if (parentPath.length > 1) {\r\n      for (let i = 0; i < parentPath.length - 1; i++) {\r\n        if (parentObj[parentPath[i]] === undefined) return data;\r\n        parentObj = parentObj[parentPath[i]];\r\n      }\r\n    }\r\n    \r\n    const lastKey = parentPath[parentPath.length - 1];\r\n    \r\n    if (parentObj[lastKey] && Array.isArray(parentObj[lastKey])) {\r\n      if (index >= 0 && index < parentObj[lastKey].length) {\r\n        const arrayClone = [...parentObj[lastKey]];\r\n        arrayClone.splice(index, 1);\r\n        \r\n        if (parentObj === data && parentPath.length === 1 && lastKey === \"0\") {\r\n          return arrayClone;\r\n        }\r\n        \r\n        const parentObjClone = Array.isArray(parentObj) ? [...parentObj] : {...parentObj};\r\n        parentObjClone[lastKey] = arrayClone;\r\n        \r\n        if (parentObj === data) {\r\n          return parentObjClone;\r\n        }\r\n        \r\n        let result = {...data};\r\n        let current = result;\r\n        for (let i = 0; i < parentPath.length - 1; i++) {\r\n          const key = parentPath[i];\r\n          current[key] = i === parentPath.length - 2 ? parentObjClone : {...current[key]};\r\n          current = current[key];\r\n        }\r\n        \r\n        return result;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n  \r\n  // Path'i tokenlara ayır\r\n  const tokens = path.split(\".\");\r\n  \r\n  // Normal path işleme - diğer durumlar için\r\n  return removePathHelper(data, tokens);\r\n}\r\n\r\nfunction removePathHelper(data: any, tokens: string[]): any {\r\n  // Eğer token kalmadıysa işlem yapma\r\n  if (!tokens.length) return data;\r\n\r\n  let token = tokens[0];\r\n  let isArrayEmptying = false;\r\n  \r\n  // \"[]\" ile biten token kontrolü (örn: arkadas_listesi[])\r\n  if (token.endsWith(\"[]\")) {\r\n    isArrayEmptying = true;\r\n    token = token.slice(0, -2); // \"[]\" kısmını kaldır\r\n  }\r\n\r\n  // İç içe dizi yapısı için özel durum kontrolü (örn: matris[].0)\r\n  // Bu token sayısal bir indeks mi kontrol et\r\n  const isNumericIndex = !isNaN(parseInt(token)) && String(parseInt(token)) === token;\r\n\r\n  if (Array.isArray(data)) {\r\n    if (isNumericIndex) {\r\n      const index = parseInt(token);\r\n      \r\n      if (index >= 0 && index < data.length) {\r\n        if (tokens.length === 1) {\r\n          return data.filter((_, i) => i !== index);\r\n        } else {\r\n          const result = [...data];\r\n          result[index] = removePathHelper(result[index], tokens.slice(1));\r\n          return result;\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    \r\n    return data.map(item => removePathHelper(item, tokens));\r\n  } \r\n  else if (data && typeof data === \"object\") {\r\n    const copy = { ...data };\r\n    \r\n    if (token in copy) {\r\n      if (isArrayEmptying && Array.isArray(copy[token])) {\r\n        if (tokens.length === 1) {\r\n          copy[token] = [];\r\n          return copy;\r\n        } else {\r\n          const nextToken = tokens[1];\r\n          const isNextNumeric = !isNaN(parseInt(nextToken)) && String(parseInt(nextToken)) === nextToken;\r\n          \r\n          if (isNextNumeric && Array.isArray(copy[token])) {\r\n            const index = parseInt(nextToken);\r\n            copy[token] = copy[token].map((innerArray: any) => {\r\n              if (Array.isArray(innerArray) && index >= 0 && index < innerArray.length) {\r\n                return innerArray.filter((_, i) => i !== index);\r\n              }\r\n              return innerArray;\r\n            });\r\n            \r\n            return removePathHelper(copy, tokens.slice(2));\r\n          } else {\r\n            if (Array.isArray(copy[token])) {\r\n              copy[token] = copy[token].map((item: any) => {\r\n                return removePathHelper(item, tokens.slice(1));\r\n              });\r\n              return copy;\r\n            }\r\n          }\r\n        }\r\n      } else if (tokens.length === 1) {\r\n        delete copy[token];\r\n        return copy;\r\n      } else if (copy[token] !== null && (typeof copy[token] === \"object\" || Array.isArray(copy[token]))) {\r\n        copy[token] = removePathHelper(copy[token], tokens.slice(1));\r\n      }\r\n    }\r\n    return copy;\r\n  }\r\n  return data;\r\n}\r\n\r\n// Validate JSON against a JSON schema\r\nexport function validateJsonAgainstSchema(json: any, schema: any): any {\r\n  // Define a validation error type\r\n  type ValidationError = {\r\n    path: string;\r\n    message: string;\r\n  };\r\n  \r\n  // Define the validation result type\r\n  type ValidationResult = {\r\n    valid: boolean;\r\n    errors: ValidationError[];\r\n  };\r\n  \r\n  // Simple schema validation implementation\r\n  const result: ValidationResult = {\r\n    valid: true,\r\n    errors: []\r\n  };\r\n\r\n  try {\r\n    // Type validation\r\n    validateType(json, schema, \"\", result);\r\n    \r\n    // Required properties validation\r\n    if (schema.type === \"object\" && schema.required && Array.isArray(schema.required)) {\r\n      for (const requiredProp of schema.required) {\r\n        if (json[requiredProp] === undefined) {\r\n          result.valid = false;\r\n          result.errors.push({\r\n            path: requiredProp,\r\n            message: `Required property '${requiredProp}' is missing`\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Properties validation for objects\r\n    if (schema.type === \"object\" && schema.properties && typeof schema.properties === \"object\") {\r\n      for (const prop in json) {\r\n        if (schema.properties[prop]) {\r\n          validateType(json[prop], schema.properties[prop], prop, result);\r\n        } else if (schema.additionalProperties === false) {\r\n          result.valid = false;\r\n          result.errors.push({\r\n            path: prop,\r\n            message: `Additional property '${prop}' is not allowed`\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Items validation for arrays\r\n    if (schema.type === \"array\" && schema.items && Array.isArray(json)) {\r\n      for (let i = 0; i < json.length; i++) {\r\n        validateType(json[i], schema.items, `[${i}]`, result);\r\n      }\r\n    }\r\n    \r\n    // Enum validation\r\n    if (schema.enum && Array.isArray(schema.enum)) {\r\n      if (!schema.enum.includes(json)) {\r\n        result.valid = false;\r\n        result.errors.push({\r\n          path: \"\",\r\n          message: `Value must be one of: ${schema.enum.join(', ')}`\r\n        });\r\n      }\r\n    }\r\n    \r\n  } catch (error) {\r\n    result.valid = false;\r\n    result.errors.push({\r\n      path: \"\",\r\n      message: String(error)\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction validateType(value: any, schema: any, path: string, result: any) {\r\n  const type = schema.type;\r\n  \r\n  if (!type) return;\r\n  \r\n  let actualType: string = typeof value;\r\n  if (Array.isArray(value)) actualType = \"array\";\r\n  if (value === null) actualType = \"null\";\r\n  \r\n  // Handle multiple types (type can be an array in JSON Schema)\r\n  const types = Array.isArray(type) ? type : [type];\r\n  \r\n  // Type mapping between JS and JSON Schema\r\n  const typeMapping: Record<string, string[]> = {\r\n    \"string\": [\"string\"],\r\n    \"number\": [\"number\"],\r\n    \"integer\": [\"number\"],\r\n    \"boolean\": [\"boolean\"],\r\n    \"object\": [\"object\"],\r\n    \"array\": [\"array\"],\r\n    \"null\": [\"null\"]\r\n  };\r\n  \r\n  let isValidType = false;\r\n  for (const schemaType of types) {\r\n    const validJsTypes = typeMapping[schemaType];\r\n    if (validJsTypes && validJsTypes.includes(actualType)) {\r\n      isValidType = true;\r\n      break;\r\n    }\r\n    // Special case for integers\r\n    if (schemaType === \"integer\" && actualType === \"number\" && Number.isInteger(value)) {\r\n      isValidType = true;\r\n      break;\r\n    }\r\n  }\r\n  \r\n  if (!isValidType) {\r\n    result.valid = false;\r\n    result.errors.push({\r\n      path: path,\r\n      message: `Type mismatch: expected ${types.join(\" or \")}, got ${actualType}`\r\n    });\r\n  }\r\n  \r\n  // Recursive validation for objects and arrays\r\n  if (actualType === \"object\" && schema.properties) {\r\n    for (const prop in schema.properties) {\r\n      if (value[prop] !== undefined) {\r\n        const propPath = path ? `${path}.${prop}` : prop;\r\n        validateType(value[prop], schema.properties[prop], propPath, result);\r\n      }\r\n    }\r\n  }\r\n  \r\n  if (actualType === \"array\" && schema.items && Array.isArray(value)) {\r\n    for (let i = 0; i < value.length; i++) {\r\n      const itemPath = path ? `${path}[${i}]` : `[${i}]`;\r\n      validateType(value[i], schema.items, itemPath, result);\r\n    }\r\n  }\r\n}\r\n","import { useState } from 'react';\r\nimport { generateSchema, gatherPaths, gatherCounts, removeSelectedPaths } from '../utils/jsonUtils';\r\n\r\nexport const useJsonOperations = () => {\r\n  const [jsonInput, setJsonInput] = useState<string>(\"\");\r\n  const [parsedJson, setParsedJson] = useState<any>(null);\r\n  const [generatedSchema, setGeneratedSchema] = useState<any>(null);\r\n  const [allPaths, setAllPaths] = useState<string[]>([]);\r\n  const [selectedRemovalPaths, setSelectedRemovalPaths] = useState<string[]>([]);\r\n  const [itemCounts, setItemCounts] = useState<Map<string, number>>(new Map());\r\n  const [modifiedJson, setModifiedJson] = useState<any>(null);\r\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\r\n\r\n  const parseJson = () => {\r\n    if (!jsonInput.trim()) {\r\n      alert(\"Please enter JSON data first\");\r\n      return;\r\n    }\r\n    \r\n    setIsProcessing(true);\r\n    \r\n    setTimeout(() => {\r\n      try {\r\n        const data = JSON.parse(jsonInput);\r\n        setParsedJson(data);\r\n        setModifiedJson(null);\r\n  \r\n        const schema = generateSchema(data);\r\n        setGeneratedSchema(schema);\r\n  \r\n        const pathSet = gatherPaths(data);\r\n        // Clean paths - fix double dots\r\n        const cleanedPaths = Array.from(pathSet)\r\n          .map(path => path.replace(/\\.{2,}/g, '.'))\r\n          .sort();\r\n        setAllPaths(cleanedPaths);\r\n  \r\n        const countsMap = gatherCounts(data);\r\n        setItemCounts(countsMap);\r\n  \r\n        setSelectedRemovalPaths([]);\r\n      } catch (error) {\r\n        alert(\"Invalid JSON: \" + (error instanceof Error ? error.message : String(error)));\r\n      } finally {\r\n        setIsProcessing(false);\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  const processJsonFromFile = (content: string) => {\r\n    try {\r\n      if (content.trim()) {\r\n        const data = JSON.parse(content);\r\n        setParsedJson(data);\r\n        setModifiedJson(null);\r\n  \r\n        const schema = generateSchema(data);\r\n        setGeneratedSchema(schema);\r\n  \r\n        const pathSet = gatherPaths(data);\r\n        const cleanedPaths = Array.from(pathSet)\r\n          .map(path => path.replace(/\\.{2,}/g, '.'))\r\n          .sort();\r\n        setAllPaths(cleanedPaths);\r\n  \r\n        const countsMap = gatherCounts(data);\r\n        setItemCounts(countsMap);\r\n  \r\n        setSelectedRemovalPaths([]);\r\n      }\r\n    } catch (error) {\r\n      alert(\"Invalid JSON file: \" + (error instanceof Error ? error.message : String(error)));\r\n    }\r\n  };\r\n\r\n  const togglePath = (path: string) => {\r\n    setSelectedRemovalPaths(prev => \r\n      prev.includes(path) \r\n        ? prev.filter(p => p !== path) \r\n        : [...prev, path]\r\n    );\r\n  };\r\n\r\n  const selectAllPaths = () => {\r\n    setSelectedRemovalPaths([...allPaths]);\r\n  };\r\n\r\n  const clearSelectedPaths = () => {\r\n    setSelectedRemovalPaths([]);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    if (!parsedJson) return;\r\n    setIsProcessing(true);\r\n    \r\n    setTimeout(() => {\r\n      try {\r\n        const newJson = removeSelectedPaths(parsedJson, selectedRemovalPaths);\r\n        setModifiedJson(newJson);\r\n      } finally {\r\n        setIsProcessing(false);\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  const loadSampleJson = () => {\r\n    const sample = JSON.stringify({\r\n      \"name\": \"JSON Editor\",\r\n      \"version\": 1.0,\r\n      \"features\": [\"Parse JSON\", \"Edit JSON\", \"Visualize JSON\"],\r\n      \"settings\": {\r\n        \"theme\": \"light\",\r\n        \"autoSave\": true,\r\n        \"notifications\": {\r\n          \"enabled\": true,\r\n          \"types\": [\"error\", \"warning\", \"info\"]\r\n        }\r\n      },\r\n      \"stats\": {\r\n        \"users\": 1000,\r\n        \"rating\": 4.8\r\n      }\r\n    }, null, 2);\r\n    \r\n    setJsonInput(sample);\r\n  };\r\n\r\n  const clearJsonInput = () => {\r\n    if (window.confirm(\"Are you sure you want to clear the JSON input? This action cannot be undone.\")) {\r\n      setJsonInput(\"\");\r\n      setParsedJson(null);\r\n      setGeneratedSchema(null);\r\n      setAllPaths([]);\r\n      setSelectedRemovalPaths([]);\r\n      setItemCounts(new Map());\r\n      setModifiedJson(null);\r\n    }\r\n  };\r\n\r\n  return {\r\n    jsonInput,\r\n    setJsonInput,\r\n    parsedJson,\r\n    generatedSchema,\r\n    allPaths,\r\n    selectedRemovalPaths,\r\n    itemCounts,\r\n    modifiedJson,\r\n    isProcessing,\r\n    parseJson,\r\n    processJsonFromFile,\r\n    togglePath,\r\n    selectAllPaths,\r\n    clearSelectedPaths,\r\n    handleRemove,\r\n    loadSampleJson,\r\n    clearJsonInput\r\n  };\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport JsonTree from './json-visualization/JsonTree';\r\nimport SimpleJsonEditor from './editors/SimpleJsonEditor';\r\nimport ToggleSwitch from './ui/ToggleSwitch';\r\nimport JsonSection from './ui/JsonSection';\r\nimport PathSelector from './ui/PathSelector';\r\nimport { useJsonOperations } from '../hooks/useJsonOperations';\r\nimport { downloadJson, copyToClipboard } from '../utils/fileUtils';\r\n\r\nconst Home: React.FC = () => {\r\n  const {\r\n    jsonInput,\r\n    setJsonInput,\r\n    parsedJson,\r\n    generatedSchema,\r\n    allPaths,\r\n    selectedRemovalPaths,\r\n    itemCounts,\r\n    modifiedJson,\r\n    isProcessing,\r\n    parseJson,\r\n    processJsonFromFile,\r\n    togglePath,\r\n    selectAllPaths,\r\n    clearSelectedPaths,\r\n    handleRemove,\r\n    loadSampleJson,\r\n    clearJsonInput\r\n  } = useJsonOperations();\r\n\r\n  const [showSchema, setShowSchema] = useState(false);\r\n  const [showItemCounts, setShowItemCounts] = useState(false);\r\n  const [showParsedTree, setShowParsedTree] = useState(true);\r\n  \r\n  // File upload ref\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  \r\n  // File upload handler\r\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n    \r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      if (e.target && typeof e.target.result === 'string') {\r\n        const content = e.target.result;\r\n        setJsonInput(content);\r\n        processJsonFromFile(content);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n    \r\n    // Reset the file input\r\n    event.target.value = '';\r\n  };\r\n  \r\n  // JSON download handler\r\n  const downloadModifiedJson = () => {\r\n    if (!modifiedJson) return;\r\n    downloadJson(modifiedJson, 'modified.json');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container min-h-screen\">\r\n      <div className=\"header-container\">\r\n        <h1 className=\"editor-title\">JSON Tools</h1>\r\n        <h2 className=\"editor-subtitle\">JSON Path Analyzer & Remover</h2>\r\n        <a href=\"https://github.com/emredav/JsonEditorWebApp\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"github-link\">\r\n          <svg className=\"github-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/>\r\n          </svg>\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"toggle-container\">\r\n        <ToggleSwitch \r\n          label=\"JSON Schema\" \r\n          checked={showSchema} \r\n          onChange={() => setShowSchema(!showSchema)} \r\n        />\r\n        <ToggleSwitch \r\n          label=\"Item Counts\" \r\n          checked={showItemCounts} \r\n          onChange={() => setShowItemCounts(!showItemCounts)} \r\n        />\r\n        <ToggleSwitch \r\n          label=\"JSON Tree\" \r\n          checked={showParsedTree} \r\n          onChange={() => setShowParsedTree(!showParsedTree)} \r\n        />\r\n      </div>\r\n\r\n      <div className=\"section\">\r\n        <div className=\"section-header\">\r\n          <h2 className=\"text-xl font-semibold\">Input JSON</h2>\r\n          <div className=\"button-group responsive-button-group\">\r\n            <button \r\n              className=\"btn-secondary\"\r\n              onClick={() => fileInputRef.current?.click()}\r\n            >\r\n              <i className=\"icon-upload\"></i>\r\n              <span className=\"button-text\">Upload</span>\r\n            </button>\r\n            <button \r\n              className=\"btn-secondary\"\r\n              onClick={loadSampleJson}\r\n            >\r\n              <i className=\"icon-sample\"></i>\r\n              <span className=\"button-text\">Sample</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"section-content\">\r\n          <div className=\"editor-wrapper\">\r\n            <SimpleJsonEditor \r\n              value={jsonInput} \r\n              onChange={setJsonInput} \r\n              height=\"300px\"\r\n            />\r\n          </div>\r\n          <input \r\n            type=\"file\" \r\n            ref={fileInputRef} \r\n            onChange={handleFileUpload} \r\n            accept=\".json\" \r\n            style={{ display: 'none' }} \r\n          />\r\n          <div className=\"editor-actions\">\r\n            <button\r\n              className=\"btn-danger\"\r\n              onClick={clearJsonInput}\r\n              disabled={!jsonInput.trim()}\r\n            >\r\n              <i className=\"icon-clear\"></i>\r\n              Clear\r\n            </button>\r\n            <button\r\n              className=\"btn-primary\"\r\n              onClick={parseJson}\r\n              disabled={isProcessing || !jsonInput.trim()}\r\n            >\r\n              {isProcessing ? 'Processing...' : 'Parse JSON'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {parsedJson && (\r\n        <div className=\"fade-in\">\r\n          {showSchema && (\r\n            <JsonSection \r\n              title=\"JSON Schema\" \r\n              data={generatedSchema} \r\n            />\r\n          )}\r\n\r\n          {showItemCounts && (\r\n            <div className=\"section\">\r\n              <div className=\"section-header\">\r\n                <h2 className=\"text-xl font-semibold\">Item Counts</h2>\r\n              </div>\r\n              <div className=\"section-content\">\r\n                <div className=\"checkbox-container\">\r\n                  {Array.from(itemCounts.entries()).map(([path, count]) => (\r\n                    <div key={path} className=\"mb-1\">\r\n                      <span className=\"font-medium\">{path}:</span> {count}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {showParsedTree && (\r\n            <div className=\"section\">\r\n              <div className=\"section-header\">\r\n                <h2 className=\"text-xl font-semibold\">JSON Tree</h2>\r\n              </div>\r\n              <div className=\"section-content tree-container\">\r\n                <JsonTree data={parsedJson} name=\"root\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <PathSelector \r\n            paths={allPaths}\r\n            selectedPaths={selectedRemovalPaths}\r\n            onTogglePath={togglePath}\r\n            onSelectAll={selectAllPaths}\r\n            onClearSelection={clearSelectedPaths}\r\n            onRemove={handleRemove}\r\n            isProcessing={isProcessing}\r\n          />\r\n\r\n          {modifiedJson && (\r\n            <JsonSection \r\n              title=\"Modified JSON\" \r\n              data={modifiedJson}\r\n              actionButton={\r\n                <button\r\n                  className=\"btn-download\"\r\n                  onClick={downloadModifiedJson}\r\n                >\r\n                  <i className=\"icon-download\"></i>\r\n                  Download JSON\r\n                </button>\r\n              }\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport SimpleJsonEditor from './editors/SimpleJsonEditor';\r\nimport JsonSection from './ui/JsonSection';\r\nimport { validateJsonAgainstSchema } from '../utils/jsonUtils';\r\n\r\nconst SchemaValidator: React.FC = () => {\r\n  const [schema, setSchema] = useState<string>('{\\n  \"type\": \"object\",\\n  \"properties\": {\\n    \"name\": { \"type\": \"string\" },\\n    \"age\": { \"type\": \"number\" }\\n  },\\n  \"required\": [\"name\"]\\n}');\r\n  const [jsonInput, setJsonInput] = useState<string>('{\\n  \"name\": \"Emre\",\\n  \"age\": 26\\n}');\r\n  const [validationResult, setValidationResult] = useState<any>(null);\r\n  const [isProcessing, setIsProcessing] = useState<boolean>(false);\r\n\r\n  const validateJson = () => {\r\n    if (!schema.trim() || !jsonInput.trim()) {\r\n      alert(\"Please enter both JSON schema and JSON data\");\r\n      return;\r\n    }\r\n    \r\n    setIsProcessing(true);\r\n    \r\n    setTimeout(() => {\r\n      try {\r\n        const schemaObj = JSON.parse(schema);\r\n        const jsonObj = JSON.parse(jsonInput);\r\n        \r\n        const result = validateJsonAgainstSchema(jsonObj, schemaObj);\r\n        setValidationResult(result);\r\n      } catch (error) {\r\n        alert(\"Invalid JSON: \" + (error instanceof Error ? error.message : String(error)));\r\n      } finally {\r\n        setIsProcessing(false);\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"editor-title\">JSON Schema Validator</h1>\r\n      <p className=\"validator-description\">\r\n        Validate your JSON against a JSON Schema to ensure it conforms to the expected structure.\r\n      </p>\r\n\r\n      <div className=\"validator-grid\">\r\n        <div className=\"section\">\r\n          <div className=\"section-header\">\r\n            <h2 className=\"text-xl font-semibold\">JSON Schema</h2>\r\n          </div>\r\n          <div className=\"section-content\">\r\n            <SimpleJsonEditor \r\n              value={schema} \r\n              onChange={setSchema} \r\n              height=\"300px\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"section\">\r\n          <div className=\"section-header\">\r\n            <h2 className=\"text-xl font-semibold\">JSON Input</h2>\r\n          </div>\r\n          <div className=\"section-content\">\r\n            <SimpleJsonEditor \r\n              value={jsonInput} \r\n              onChange={setJsonInput} \r\n              height=\"300px\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"editor-actions\">\r\n        <button\r\n          className=\"btn-primary\"\r\n          onClick={validateJson}\r\n          disabled={isProcessing}\r\n        >\r\n          {isProcessing ? 'Processing...' : 'Validate JSON'}\r\n        </button>\r\n      </div>\r\n\r\n      {validationResult && (\r\n        <div className=\"fade-in\">\r\n          <JsonSection \r\n            title=\"Validation Result\" \r\n            data={validationResult} \r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchemaValidator;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../../styles/components.css';\r\n\r\nconst Navigation: React.FC = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-container\">\r\n        <div className=\"navbar-logo\">\r\n          JSON Editor\r\n        </div>\r\n        <div className=\"navbar-links\">\r\n          <NavLink \r\n            to=\"/home\" \r\n            className={({ isActive }) => isActive ? 'navbar-link active' : 'navbar-link'}\r\n          >\r\n            Home\r\n          </NavLink>\r\n          <NavLink \r\n            to=\"/validator\" \r\n            className={({ isActive }) => isActive ? 'navbar-link active' : 'navbar-link'}\r\n          >\r\n            Validator\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { HashRouter, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport SchemaValidator from './SchemaValidator';\r\nimport Navigation from './ui/Navigation';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Routes>\r\n        <Route path=\"/home\" element={<Home />} />\r\n        <Route path=\"/validator\" element={<SchemaValidator />} />\r\n        <Route path=\"/\" element={<Navigate to=\"/home\" />} />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/base.css';\r\nimport './styles/components.css';\r\nimport './styles/utilities.css';\r\nimport './styles/buttons.css';\r\nimport './styles/responsive.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}